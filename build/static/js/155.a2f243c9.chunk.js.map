{"version":3,"sources":["views/apps/mySubs/MySubscription.js","axiosConfig.js"],"names":["MySubscription","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","valueGetter","width","filter","cellRendererFramework","params","className","data","staffname","comments","value","status","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","id","error","this","sm","col-sm-6","onClick","history","push","tag","length","size","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/155.a2f243c9.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\n\nclass MySubscription extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\ncolumnDefs: [\n  {\n    headerName: \"S.No\",\n    field: \"staffID\",\n    valueGetter: \"node.rowIndex + 1\",\n    width: 120,\n    filter: true,\n    // checkboxSelection: true,\n    // headerCheckboxSelectionFilteredOnly: true,\n    // headerCheckboxSelection: true,\n  },\n  {\n    headerName: \"Plan Name\",\n    field: \"planname\",\n    filter: true,\n    width: 180,\n    cellRendererFramework: (params) => {\n      return (\n        <div className=\"d-flex align-items-center cursor-pointer\">\n          <span>{params.data.staffname}</span>\n        </div>\n      );\n    },\n  },\n  {\n    headerName: \"Amount\",\n    field: \"amount\",\n    filter: true,\n    width: 180,\n    cellRendererFramework: (params) => {\n      return (\n        <div className=\"d-flex align-items-center cursor-pointer\">\n          <span>{params.data.staffname}</span>\n        </div>\n      );\n    },\n  },\n  {\n    headerName: \"Transcation Id\",\n    field: \"staffname\",\n    filter: true,\n    width: 180,\n    cellRendererFramework: (params) => {\n      return (\n        <div className=\"d-flex align-items-center cursor-pointer\">\n          <span>{params.data.staffname}</span>\n        </div>\n      );\n    },\n  },\n  {\n    headerName: \"Start Date\",\n    field: \"renewal_date\",\n    filter: true,\n    resizable: true,\n    width: 180,\n    cellRendererFramework: (params) => {\n      return (\n        <div className=\"d-flex align-items-center cursor-pointer\">\n          <div className=\"ml-2\">\n            <span>{params.data.comments}</span>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    headerName: \"End Date\",\n    field: \"renewal_date\",\n    filter: true,\n    resizable: true,\n    width: 180,\n    cellRendererFramework: (params) => {\n      return (\n        <div className=\"d-flex align-items-center cursor-pointer\">\n          <div className=\"ml-2\">\n            <span>{params.data.comments}</span>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    headerName: \"Status\",\n    field: \"status\",\n    filter: true,\n    width: 150,\n    cellRendererFramework: (params) => {\n      return params.value === \"Active\" ? (\n        <div className=\"badge badge-pill badge-success\">\n          {params.data.status}\n        </div>\n      ) : params.value === \"Inactive\" ? (\n        <div className=\"badge badge-pill badge-warning\">\n          {params.data.status}\n        </div>\n      ) : null;\n    },\n  },\n\n//   {\n//     headerName: \"Actions\",\n//     field: \"transactions\",\n//     width: 150,\n//     cellRendererFramework: (params) => {\n//       return (\n//         <div className=\"actions cursor-pointer\">\n//           <Eye\n//             className=\"mr-50\"\n//             size={20}\n//             onClick={() =>\n//               history.push(`/app/staff/viewStaff/${params.data._id}`)\n//             }\n//           />\n//           <Edit\n//             className=\"mr-50\"\n//             size={20}\n//             onClick={() => history.push(\"\")}\n//           />\n//           <Trash2\n//             size={20}\n//             onClick={() => {\n//               let selectedData = this.gridApi.getSelectedRows();\n//               this.gridApi.updateRowData({ remove: selectedData });\n//             }}\n//           />\n//         </div>\n//       );\n//     },\n//   },\n],\n};\n  async componentDidMount() {\n    await axiosConfig.get(\"/allproduct\").then((response) => {\n      const rowData = response.data.data;\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/delproduct/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\">\n          </Col>\n          <Col sm=\"12\">\n            <Card>\n            <Row className=\"m-2\">\n                <Col>\n                  <h1 col-sm-6 className=\"float-left\">\n                    My Subscription\n                  </h1>\n                </Col>\n                <Col>\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() => history.push(\"/app/mySubs/addSubs\")}\n                  >\n                   Upgrate\n                  </Button>\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default MySubscription;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}