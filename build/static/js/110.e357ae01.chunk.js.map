{"version":3,"sources":["views/apps/website/blog/BlogList.js","axiosConfig.js"],"names":["BlogList","state","rowData","pageSize","isVisible","reload","collapse","status","role","selectStatus","verified","department","defaultColDef","sortable","searchVal","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","format","data","createdAt","src","blog_img","alt","height","category","blog_title","short_desc","full_desc","size","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","filterData","column","val","modelObj","type","getFilterInstance","setModel","onFilterChanged","filterSize","paginationSetPageSize","Number","setState","updateSearchQuery","setQuickFilter","refreshCard","setTimeout","toggleCollapse","onEntered","onEntering","onExiting","onExited","removeCard","a","axiosConfig","get","then","response","id","console","log","this","sm","col-sm-6","history","push","tag","currenPageSize","getPageSize","length","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","paginationPageSize","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/110.e357ae01.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Button,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\n\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport Moment from \"react-moment\";\nimport \"../../../../assets/scss/pages/users.scss\";\n\nclass BlogList extends React.Component {\n  state = {\n    rowData: [],\n    pageSize: 20,\n    isVisible: true,\n    reload: false,\n    collapse: true,\n    status: \"Opened\",\n    role: \"All\",\n    selectStatus: \"All\",\n    verified: \"All\",\n    department: \"All\",\n    defaultColDef: {\n      sortable: true,\n    },\n    searchVal: \"\",\n    columnDefs: [\n      {\n        headerName: \"S.no\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"sortorder\",\n        width: 120,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Posted Date\",\n        field: \"createdAt\",\n\n        filter: \"agSetColumnFilter\",\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <Moment format=\"llll\">{params.data.createdAt}</Moment>\n                {/* <span>{params.data.createdAt}</span> */}\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Image\",\n        field: \"blog_img\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <img\n                className=\"rounded-circle mr-50\"\n                src={params.data.blog_img}\n                alt=\"user avatar\"\n                height=\"40\"\n                width=\"40\"\n              />\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Blog Category\",\n        field: \"category\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.category}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Blog Title\",\n        field: \"blog_title\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.blog_title}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Short Description\",\n        field: \"short_desc\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.short_desc}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Description\",\n        field: \"full_desc\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.full_desc}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Actions\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Edit className=\"mr-50\" size={20} />\n              <Trash2\n                size={20}\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    await axiosConfig.get(\"/allblog\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/delblog/${id}`).then((response) => {\n      console.log(response);\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  };\n\n  filterData = (column, val) => {\n    var filter = this.gridApi.getFilterInstance(column);\n    var modelObj = null;\n    if (val !== \"all\") {\n      modelObj = {\n        type: \"equals\",\n        filter: val,\n      };\n    }\n    filter.setModel(modelObj);\n    this.gridApi.onFilterChanged();\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        pageSize: val,\n      });\n    }\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n    this.setState({\n      searchVal: val,\n    });\n  };\n\n  refreshCard = () => {\n    this.setState({ reload: true });\n    setTimeout(() => {\n      this.setState({\n        reload: false,\n        role: \"All\",\n        selectStatus: \"All\",\n        verified: \"All\",\n        department: \"All\",\n      });\n    }, 500);\n  };\n\n  toggleCollapse = () => {\n    this.setState((state) => ({ collapse: !state.collapse }));\n  };\n  onEntered = () => {\n    this.setState({ status: \"Opened\" });\n  };\n  onEntering = () => {\n    this.setState({ status: \"Opening...\" });\n  };\n\n  onEntered = () => {\n    this.setState({ status: \"Opened\" });\n  };\n  onExiting = () => {\n    this.setState({ status: \"Closing...\" });\n  };\n  onExited = () => {\n    this.setState({ status: \"Closed\" });\n  };\n  removeCard = () => {\n    this.setState({ isVisible: false });\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\">\n          {/* <Card\n            className={classnames(\"card-action card-reload\", {\n              \"d-none\": this.state.isVisible === false,\n              \"card-collapsed\": this.state.status === \"Closed\",\n              closing: this.state.status === \"Closing...\",\n              opening: this.state.status === \"Opening...\",\n              refreshing: this.state.reload,\n            })}\n          >\n            <CardHeader>\n              <CardTitle>Filters</CardTitle>\n              <div className=\"actions\">\n                <ChevronDown\n                  className=\"collapse-icon mr-50\"\n                  size={15}\n                  onClick={this.toggleCollapse}\n                />\n                <RotateCw\n                  className=\"mr-50\"\n                  size={15}\n                  onClick={() => {\n                    this.refreshCard();\n                    this.gridApi.setFilterModel(null);\n                  }}\n                />\n                <X size={15} onClick={this.removeCard} />\n              </div>\n            </CardHeader>\n            <Collapse\n              isOpen={this.state.collapse}\n              onExited={this.onExited}\n              onEntered={this.onEntered}\n              onExiting={this.onExiting}\n              onEntering={this.onEntering}\n            >\n              <CardBody>\n                {this.state.reload ? (\n                  <Spinner color=\"primary\" className=\"reload-spinner\" />\n                ) : (\n                  \"\"\n                )}\n                <Row>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"role\">Role</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"role\"\n                        id=\"role\"\n                        value={this.state.role}\n                        onChange={(e) => {\n                          this.setState(\n                            {\n                              role: e.target.value,\n                            },\n                            () =>\n                              this.filterData(\n                                \"role\",\n                                this.state.role.toLowerCase()\n                              )\n                          );\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"User\">User</option>\n                        <option value=\"Staff\">Staff</option>\n                        <option value=\"Admin\">Admin</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"status\">Status</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"status\"\n                        id=\"status\"\n                        value={this.state.selectStatus}\n                        onChange={(e) => {\n                          this.setState(\n                            {\n                              selectStatus: e.target.value,\n                            },\n                            () =>\n                              this.filterData(\n                                \"status\",\n                                this.state.selectStatus.toLowerCase()\n                              )\n                          );\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Blocked\">Blocked</option>\n                        <option value=\"Deactivated\">Deactivated</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"verified\">Verified</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"verified\"\n                        id=\"verified\"\n                        value={this.state.verified}\n                        onChange={(e) => {\n                          this.setState(\n                            {\n                              verified: e.target.value,\n                            },\n                            () =>\n                              this.filterData(\n                                \"is_verified\",\n                                this.state.verified.toLowerCase()\n                              )\n                          );\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"True\">True</option>\n                        <option value=\"False\">False</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                  <Col lg=\"3\" md=\"6\" sm=\"12\">\n                    <FormGroup className=\"mb-0\">\n                      <Label for=\"department\">Department</Label>\n                      <Input\n                        type=\"select\"\n                        name=\"department\"\n                        id=\"department\"\n                        value={this.state.department}\n                        onChange={(e) => {\n                          this.setState(\n                            {\n                              department: e.target.value,\n                            },\n                            () =>\n                              this.filterData(\n                                \"department\",\n                                this.state.department.toLowerCase()\n                              )\n                          );\n                        }}\n                      >\n                        <option value=\"All\">All</option>\n                        <option value=\"Sales\">Sales</option>\n                        <option value=\"Development\">Development</option>\n                        <option value=\"Management\">Management</option>\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Collapse>\n          </Card> */}\n        </Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Blog List\n                </h1>\n              </Col>\n              <Col>\n                <Button\n                  className=\" btn btn-danger float-right\"\n                  onClick={() => history.push(\"/app/website/blog/addBlog\")}\n                >\n                  Add New Blog\n                </Button>\n              </Col>\n            </Row>\n            <CardBody>\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default BlogList;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}