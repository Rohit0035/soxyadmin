{"version":3,"sources":["views/apps/walletPage/Deposit.js"],"names":["Deposit","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","cellRendererFramework","params","data","customer","firstname","lastname","customerId","email","mobile","amount","reqamount","pay_method","setColumnVisible","className","src","depsite_file","alt","height","value","status","size","color","onClick","history","push","_id","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","console","log","this","Fragment","breadCrumbTitle","breadCrumbActive","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/246.eddada9b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Edit, Eye, Plus, PlusCircle, Trash2 } from \"react-feather\";\nimport { history } from \"../../.././history\";\nimport axios from \"axios\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { Link } from \"react-router-dom\";\n\nclass Deposit extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"UserName\",\n        field: \"customer.firstname\",\n        width: 175,\n        filter: true,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.customer?.firstname} {params.data.customer?.lastname} </span>\n              \n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserId\",\n        field: \"customer.customerId\",\n        filter: \"true\",\n        width: 140,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.customer?.customerId}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Date\",\n      //   field: \"Date\",\n      //   filter: true,\n      //   width: 250,\n      // },\n      {\n        headerName: \"Email\",\n        field: \"customer.email\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.customer?.email}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Phone Number\",\n        field: \"customer.mobile\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.customer?.mobile}</span>\n            </div>\n          );\n        },\n      },\n      \n      {\n        headerName: \"Amount\",\n        field: \"amount\",\n        filter: true,\n        width: 125,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.amount}</span>\n            </div>\n          );\n        },\n      },\n     \n      {\n        headerName: \"Request Amount\",\n        field: \"reqamount\",\n        filter: true,\n        width: 125,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.reqamount}</span>\n            </div>\n          );\n        },\n      },\n      // {\n      //   headerName: \"Add Amount\",\n      //   field: \"add_amount\",\n      //   filter: true,\n      //   width: 125,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.add_amount}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \"Payment Method\",\n        field: \"pay_method\",\n        filter: \"true\",\n        width: 140,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.pay_method}</span>\n            </div>\n          );\n        },\n      },\n      \n      {\n          headerName: \"Image\",\n          field: \"depsite_file\",\n          filter: false,\n          width: 200,\n          setColumnVisible: false,\n          cellRendererFramework: (params) => {\n            return (\n              <div className=\"d-flex align-items-center cursor-pointer\">\n                \n                <img\n                  className=\" rounded-circle  mr-3\"\n                  src= {params.data.depsite_file}\n                  alt=\"user avatar\"\n                  height=\"40\"\n                  width=\"40\"\n                /> \n              </div>\n            );\n          },\n        },\n        {\n          headerName: \"Status\",\n          field: \"status\",\n          filter: true,\n          width: 150,\n          cellRendererFramework: (params) => {\n            return params.value === \"Success\" ? (\n              <div className=\"badge badge-pill badge-success\">\n                {params.data.status}\n              </div>\n            ) : params.value === \"Pending\" ? (\n              <div className=\"badge badge-pill badge-warning\">\n                {params.data.status}\n              </div>\n            ) : null;\n          },\n        },\n      {\n        headerName: \"Actions\",\n        field: \"_id\",\n        width: 150,\n        cellRendererFramework: params => {\n          //alert('hello')\n          return (\n            <div className=\"actions cursor-pointer\">\n              {/* <Eye\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"green\"\n                onClick={() => history.push(\"/apps/walletPage/depositForm\")}\n              /> */}\n              <PlusCircle\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"blue\"\n                onClick={() =>\n                   history.push('/app/walletPage/adddeposit/'+params.data._id)}\n                \n              />\n              {/* <Trash2\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                 }}\n              /> */}\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  componentDidMount() {\n    axios.get(\"http://35.154.134.118:8000/admin/getwallet\").then((response) => {\n      let rowData = response.data.data;\n      // JSON.stringify(rowData);\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Deposit List\"\n          //   breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Wallet \"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n                  {/* <div className=\"dpadd p-2\">\n                      <Link to=\"adddeposit\">\n                      <Button\n                        className=\" btn btn-success float-right\"\n                     \n                      >\n                        Add\n                      </Button>\n                      </Link>\n                  </div> */}\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                     <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nexport default Deposit;\n"],"sourceRoot":""}