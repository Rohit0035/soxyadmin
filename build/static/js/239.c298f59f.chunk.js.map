{"version":3,"sources":["views/apps/services/Recharg.js"],"names":["Recharg","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","data","walletId","customer","firstname","lastname","customerId","email","mobile","amount","pay_method","setColumnVisible","className","src","depsite_file","alt","height","value","status","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","console","log","this","Fragment","breadCrumbTitle","breadCrumbActive","to","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/239.c298f59f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\n// import { history } from \"../../.././history\";\r\nimport axios from \"axios\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recharg extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"UserName\",\r\n        field: \"walletId.customer.firstname\",\r\n        width: 175,\r\n        // filter: true,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.walletId?.customer?.firstname} {params.data.walletId?.customer?.lastname} </span>\r\n              \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"UserId\",\r\n        field: \"walletId.customer.customerId\",\r\n        // filter: \"true\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.walletId?.customer?.customerId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Date\",\r\n      //   field: \"Date\",\r\n      //   filter: true,\r\n      //   width: 250,\r\n      // },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"customer.email\",\r\n        // filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.walletId?.customer?.email}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Phone Number\",\r\n        field: \"walletId.customer.mobile\",\r\n        // filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.walletId?.customer?.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"HashTag\",\r\n        field: \"amount\",\r\n        // filter: true,\r\n        width: 125,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.amount}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Payment Method\",\r\n        field: \"walletId.pay_method\",\r\n        // filter: \"true\",\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.walletId?.pay_method}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      \r\n      {\r\n          headerName: \"Image\",\r\n          field: \"walletId.depsite_file\",\r\n          // filter: false,\r\n          width: 200,\r\n          setColumnVisible: false,\r\n          cellRendererFramework: (params) => {\r\n            return (\r\n              <div className=\"d-flex align-items-center cursor-pointer\">\r\n                \r\n                <img\r\n                  className=\" rounded-circle  mr-3\"\r\n                  src= {params.data.walletId?.depsite_file}\r\n                  alt=\"user avatar\"\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                /> \r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          headerName: \"Status\",\r\n          field: \"status\",\r\n          // filter: true,\r\n          width: 150,\r\n          cellRendererFramework: (params) => {\r\n            return params.value === \"Success\" ? (\r\n              <div className=\"badge badge-pill badge-success\">\r\n                {params.data.status}\r\n              </div>\r\n            ) : params.value === \"Pending\" ? (\r\n              <div className=\"badge badge-pill badge-warning\">\r\n                {params.data.status}\r\n              </div>\r\n            ) : null;\r\n          },\r\n        },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"green\"\r\n                // onClick={() => history.push(\"/apps/walletPage/depositForm\")}\r\n              />\r\n              {/* <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n              \r\n              /> */}\r\n              <Trash2\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                 }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://35.154.134.118/api/admin/gettransaction\").then((response) => {\r\n      let rowData = response.data.data;\r\n      // JSON.stringify(rowData);\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Transaction List\"\r\n          //   breadCrumbParent=\"Forms & Tables\"\r\n          breadCrumbActive=\"Wallet \"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n                  <div className=\"dpadd p-2\">\r\n                      <Link to=\"adddeposit\">\r\n                      <Button\r\n                        className=\" btn btn-success float-right\"\r\n                     \r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      </Link>\r\n                  </div>\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={e => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                     <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {context => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={true}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Recharg;\r\n"],"sourceRoot":""}