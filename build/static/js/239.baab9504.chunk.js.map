{"version":3,"sources":["views/apps/services/Recharg.js"],"names":["Recharg","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","cellRendererFramework","params","data","agent_id","walletId","customer","firstname","lastname","customerId","number","biller_code","amount","filter","className","moment","createdAt","format","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","console","log","this","Fragment","breadCrumbTitle","breadCrumbActive","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/239.baab9504.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\n// import { history } from \"../../.././history\";\nimport axios from \"axios\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nclass Recharg extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"Transaction ID\",\n        field: \"agent_id\",\n        width: 175,\n        // filter: true,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n             <span>{params.data.agent_id}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserName\",\n        field: \"walletId.customer.firstname\",\n        width: 175,\n        // filter: true,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.walletId?.customer?.firstname} {params.data.walletId?.customer?.lastname} </span>\n              \n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"UserId\",\n        field: \"walletId.customer.customerId\",\n        // filter: \"true\",\n        width: 140,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.walletId?.customer?.customerId}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Date\",\n      //   field: \"Date\",\n      //   filter: true,\n      //   width: 250,\n      // },\n      // {\n      //   headerName: \"Email\",\n      //   field: \"customer.email\",\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.walletId?.customer?.email}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \"Phone Number\",\n        field: \"number\",\n        // filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.number}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Services\",\n      //   field: \"recharge_type\",\n      //   // filter: true,\n      //   width: 125,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.recharge_type}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n\n      {\n        headerName: \"Operator\",\n        field: \"biller_code\",\n        // filter: true,\n        width: 125,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.biller_code}</span>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"HashTag\",\n        field: \"amount\",\n        // filter: true,\n        width: 125,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.amount}</span>\n            </div>\n          );\n        },\n      },\n\n      // {\n      //   headerName: \"Date\",\n      //   field: \"createdAt\",\n      //   // filter: true,\n      //   width: 125,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{moment(this.state.data?.createdAt).format(\"ll\")}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      {\n        headerName: \" Date\",\n        field: \"createdAt\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{moment(params.data.createdAt).format(\"ll\")}</span>\n            </div>\n          );\n        },\n      },\n      // {\n      //   headerName: \"Payment Method\",\n      //   field: \"walletId.pay_method\",\n      //   width: 140,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div>\n      //         <span>{params.data.walletId?.pay_method}</span>\n      //       </div>\n      //     );\n      //   },\n      // },\n      \n      // {\n      //     headerName: \"Image\",\n      //     field: \"walletId.depsite_file\",\n         \n      //     width: 200,\n      //     setColumnVisible: false,\n      //     cellRendererFramework: (params) => {\n      //       return (\n      //         <div className=\"d-flex align-items-center cursor-pointer\">\n                \n      //           <img\n      //             className=\" rounded-circle  mr-3\"\n      //             src= {params.data.walletId?.depsite_file}\n      //             alt=\"user avatar\"\n      //             height=\"40\"\n      //             width=\"40\"\n      //           /> \n      //         </div>\n      //       );\n      //     },\n      //   },\n        // {\n        //   headerName: \"Status\",\n        //   field: \"status\",\n        //   width: 150,\n        //   cellRendererFramework: (params) => {\n        //     return params.data.value === \"Success\" ? (\n        //       <div className=\"badge badge-pill badge-success\">\n        //         {params.data.status}\n        //       </div>\n        //     ) : params.value === \"Pending\" ? (\n        //       <div className=\"badge badge-pill badge-warning\">\n        //         {params.data.status}\n        //       </div>\n        //     ) : null;\n        //   },\n        // },\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"transactions\",\n      //   width: 150,\n      //   cellRendererFramework: params => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         <Eye\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"green\"\n                \n      //         />\n      //          <Edit\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"blue\"\n              \n      //         /> \n      //         <Trash2\n      //           size=\"25px\"\n      //           color=\"red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //            }}\n      //         />\n      //       </div>\n      //     );\n      //   },\n      // },\n    ],\n  };\n\n  componentDidMount() {\n    //  let { id } = this.props.match.params;\n\n    axios.get(`http://35.154.134.118/api/admin/mobile_rechargelist`).then((response) => {\n      let rowData = response.data.data;\n      // JSON.stringify(rowData);\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Transaction List\"\n          //   breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Wallet \"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n                   {/* <div className=\"dpadd p-2\">\n                      <Link to=\"adddeposit\">\n                      <Button\n                        className=\" btn btn-success float-right\"\n                     \n                      >\n                        Add\n                      </Button>\n                      </Link>\n                  </div> */}\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                     <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nexport default Recharg;\n"],"sourceRoot":""}