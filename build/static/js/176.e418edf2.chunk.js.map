{"version":3,"sources":["views/apps/sponsoredAds/SponsoredAd.js","axiosConfig.js"],"names":["SponsoredAd","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","banner_title","value","className","status","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","console","log","sm","tag","length","right","placeholder","onChange","e","target","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"uWAsBMA,G,0NACJC,MAAQ,CACNC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACbC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAGhBC,WAAY,CACV,CACEC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAKV,CACEJ,WAAY,qBACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAK3B,CACAR,WAAY,aACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAK3B,CACER,WAAY,YACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAM3B,CACER,WAAY,QACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAK3B,CACER,WAAY,oBACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAK3B,CACER,WAAY,eACZE,MAAO,eACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,6BACE,8BAAOA,EAAOC,KAAKC,iBAS3B,CACIR,WAAY,OACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,MAAwB,WAAjBA,EAAOG,MACZ,yBAAKC,UAAU,kCACZJ,EAAOC,KAAKI,QAEI,SAAjBL,EAAOG,MACT,yBAAKC,UAAU,kCACZJ,EAAOC,KAAKI,QAEb,OAGR,CACEX,WAAY,WACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACtB,MAAwB,aAAjBA,EAAOG,MACZ,yBAAKC,UAAU,kCACZJ,EAAOC,KAAKI,QAEI,cAAjBL,EAAOG,MACT,yBAAKC,UAAU,kCACZJ,EAAOC,KAAKI,QAEb,OAGR,CACEX,WAAY,UACZE,MAAO,YAGPC,MAAO,IACPE,sBAAuB,SAACC,GACtB,OACE,yBAAKI,UAAU,0BACb,kBAAC,IAAD,CACEA,UAAU,QACVE,KAAM,GACNC,QAAS,kBACPC,IAAQC,KAAR,6CAAmDT,EAAOC,KAAKS,SAQnE,kBAAC,IAAD,CACEJ,KAAM,GACNC,QAAS,WACP,IAAII,EAAe,EAAKC,QAAQC,kBAChC,EAAKC,gBAAgBd,EAAOC,KAAKS,KACjC,EAAKE,QAAQG,cAAc,CAAEC,OAAQL,Y,EA2BrDM,YAAc,SAACjB,GACb,EAAKY,QAAUZ,EAAOkB,IACtB,EAAKC,cAAgBnB,EAAOoB,UAC5B,EAAKC,SAAS,CACZnC,eAAgB,EAAK0B,QAAQU,2BAA6B,EAC1DnC,YAAa,EAAKyB,QAAQW,wBAC1BC,WAAY,EAAKZ,QAAQa,6B,EAI7BC,kBAAoB,SAACC,GACnB,EAAKf,QAAQgB,eAAeD,I,EAG9BE,WAAa,SAACF,GACR,EAAKf,UACP,EAAKA,QAAQkB,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACZnC,eAAgByC,EAChBxC,YAAawC,M,4CAInB,WAAU,IAAD,OACP,EAA+CK,KAAKjD,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACE6C,QAAQC,IAAIlD,GAEV,kBAAC,IAAD,CAAKoB,UAAU,iBACb,kBAAC,IAAD,CAAK+B,GAAG,OAGR,kBAAC,IAAD,CAAKA,GAAG,MACN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/B,UAAU,OACb,kBAAC,IAAD,KACE,wBAAI+B,GAAG,IAAI/B,UAAU,cAArB,2BAaJ,kBAAC,IAAD,KAC0B,OAAvB4B,KAAKjD,MAAMC,QAAmB,KAC7B,yBAAKoB,UAAU,8CACb,yBAAKA,UAAU,+DACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAsBA,UAAU,mBAC9B,kBAAC,IAAD,CAAgBgC,IAAI,OACjBJ,KAAKpB,QACFoB,KAAKjD,MAAMG,eACX,GAAK8C,KAAKjD,MAAMI,aACf6C,KAAKjD,MAAMI,YAAc,GAAI,IAJpC,IAKI,IACD6C,KAAKjD,MAAMC,QAAQqD,OAClBL,KAAKjD,MAAMG,eACT8C,KAAKjD,MAAMI,YACf,EACI6C,KAAKjD,MAAMG,eACX8C,KAAKjD,MAAMI,YACX6C,KAAKjD,MAAMC,QAAQqD,OAAQ,IAZjC,MAaML,KAAKjD,MAAMC,QAAQqD,OACvB,kBAAC,IAAD,CAAajC,UAAU,QAAQE,KAAM,MAEvC,kBAAC,IAAD,CAAcgC,OAAK,GACjB,kBAAC,IAAD,CACEF,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,MAFjC,MAMA,kBAAC,IAAD,CACEO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,OAFjC,OAMA,kBAAC,IAAD,CACEO,IAAI,MACJ7B,QAAS,kBAAM,EAAKsB,WAAW,OAFjC,UASN,yBAAKzB,UAAU,iDACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACEmC,YAAY,YACZC,SAAU,SAACC,GAAD,OACR,EAAKf,kBAAkBe,EAAEC,OAAOvC,QAElCA,MAAO6B,KAAKjD,MAAMoB,SAGtB,yBAAKC,UAAU,cACb,kBAAC,IAAOuC,OAAR,CACEC,MAAM,UACNrC,QAAS,kBAAM,EAAKK,QAAQiC,oBAF9B,oBASN,kBAAC,IAAcC,SAAf,MACG,SAACC,GAAD,OACC,kBAAC,cAAD,CACEC,YAAa,GACbC,aAAa,WACb7D,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTiC,YAAa,EAAKA,YAClBiC,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZpE,mBAAoB,EAAKF,MAAME,mBAC/BqE,eAAe,SACfC,UAAuC,QAA5BR,EAAQhE,MAAMyE,wB,GAxUzBC,IAAMC,YAwVjB5E,a,iCC9Wf,YAEM6E,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,QAAS,oCAIIH,O","file":"static/js/176.e418edf2.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\n\nclass SponsoredAd extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {   \n        headerName: \"Store/Company name\",\n        field: \"banner_title\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.banner_title}</span>\n            </div>\n          );\n        },\n      },\n      {\n      headerName: \"Owner Name\",\n      field: \"banner_title\",\n      filter: true,\n      width: 200,\n      cellRendererFramework: (params) => {\n        return (\n          <div>\n            <span>{params.data.banner_title}</span>\n          </div>\n        );\n      },\n    },\n    {\n      headerName: \"Phone No.\",\n      field: \"banner_title\",\n      filter: true,\n      width: 200,\n      cellRendererFramework: (params) => {\n        return (\n          <div>\n            <span>{params.data.banner_title}</span>\n          </div>\n        );\n      },\n    },  \n  \n    {\n      headerName: \"Email\",\n      field: \"banner_title\",\n      filter: true,\n      width: 200,\n      cellRendererFramework: (params) => {\n        return (\n          <div>\n            <span>{params.data.banner_title}</span>\n          </div>\n        );\n      },\n    },\n    {\n      headerName: \"Subscription Date\",\n      field: \"banner_title\",\n      filter: true,\n      width: 200,\n      cellRendererFramework: (params) => {\n        return (\n          <div>\n            <span>{params.data.banner_title}</span>\n          </div>\n        );\n      },\n    },\n    {\n      headerName: \"Renewal Date\",\n      field: \"banner_title\",\n      filter: true,\n      width: 200,\n      cellRendererFramework: (params) => {\n        return (\n          <div>\n            <span>{params.data.banner_title}</span>\n          </div>\n        );\n      },\n    },\n\n\n   \n    \n    {\n        headerName: \"Slot\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"Single\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Dual\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Duration\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"6 months\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"12 months\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n     \n        // field: \"transactions\",\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Eye\n                className=\"mr-50\"\n                size={20}\n                onClick={() =>\n                  history.push(`/app/sponsoredAds/viewSponsoredAds/${params.data._id}`)\n                }\n              />\n              {/* <Edit\n                className=\"mr-50\"\n                size={20}\n                onClick={() => history.push(\"/app/slider/editSlider\")}\n              /> */}\n              <Trash2\n                size={20}\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  // async componentDidMount() {\n  //   await axiosConfig.get(\"/getbanner\").then((response) => {\n  //     const rowData = response.data.data;\n  //     console.log(rowData);\n  //     this.setState({ rowData });\n  //   });\n  // }\n  // async runthisfunction(id) {\n  //   console.log(id);\n  //   await axiosConfig.get(`/delbanner/${id}`).then(\n  //     (response) => {\n  //       console.log(response);\n  //     },\n  //     (error) => {\n  //       console.log(error);\n  //     }\n  //   );\n  // }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\">\n            \n          </Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                  Sponsored Ads Details \n                  </h1>\n                </Col>\n                {/* <Col>\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() => history.push(\"/app/slider/addSlider\")}\n                  >\n                    Add Slider\n                  </Button>\n                </Col> */}\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\n\n\nexport default SponsoredAd;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}