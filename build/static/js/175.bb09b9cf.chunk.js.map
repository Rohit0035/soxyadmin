{"version":3,"sources":["views/apps/slider/SliderList.js","axiosConfig.js"],"names":["SliderList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","banner_title","setColumnVisible","className","banner_img","map","i","src","alt","height","bannertype","value","status","size","color","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/175.bb09b9cf.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nclass SliderList extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"Banner Title\",\n        field: \"banner_title\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.banner_title}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Banner Image\",\n        field: \"banner_img\",\n        filter: false,\n        width: 200,\n        setColumnVisible: false,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n               {params.data.banner_img.map((i) => (\n              <img\n                className=\" rounded-circle  mr-3\"\n                src={i}\n                alt=\"user avatar\"\n                height=\"40\"\n                width=\"40\"\n              />\n               ))}\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Banner Type\",\n        field: \"bannertype\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data.bannertype}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Inactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"sortorder\",\n        width: 150,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Eye\n               className=\"mr-50\"\n               size=\"25px\"\n               color=\"green\"\n                onClick={() =>\n                history.push(`/app/slider/viewSlider/${params.data._id}`)\n                }\n              />\n              {/* <Edit\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"blue\"\n                onClick={() => history.push(\"/app/slider/editSlider/${params.data._id}\")}\n              />*/}\n              <Trash2\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"red\"\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n  async componentDidMount() {\n    await axiosConfig.get(\"/viewonebanner\").then((response) => {\n      let rowData = response.data.data;\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n  async componentDidMount() {\n    await axiosConfig.get(\"/getbanner\").then((response) => {\n      const rowData = response.data.data;\n      console.log(rowData);\n      this.setState({ rowData });\n    });\n  }\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/delbanner/${id}`).then(\n      (response) => {\n        console.log(response);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      console.log(rowData),\n      (\n        <Row className=\"app-user-list\">\n          <Col sm=\"12\">\n          </Col>\n          <Col sm=\"12\">\n            <Card>\n              <Row className=\"m-2\">\n                <Col>\n                  <h1 sm=\"6\" className=\"float-left\">\n                    Silder List\n                  </h1>\n                </Col>\n                <Col>\n                  <Button\n                    className=\" btn btn-danger float-right\"\n                    onClick={() => history.push(\"/app/slider/addSlider\")}\n                  >\n                    Add Slider\n                  </Button>\n                </Col>\n              </Row>\n              <CardBody>\n                {this.state.rowData === null ? null : (\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                      <div className=\"mb-1\">\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                          <DropdownToggle tag=\"div\">\n                            {this.gridApi\n                              ? this.state.currenPageSize\n                              : \"\" * this.state.getPageSize -\n                                (this.state.getPageSize - 1)}{\" \"}\n                            -{\" \"}\n                            {this.state.rowData.length -\n                              this.state.currenPageSize *\n                                this.state.getPageSize >\n                            0\n                              ? this.state.currenPageSize *\n                                this.state.getPageSize\n                              : this.state.rowData.length}{\" \"}\n                            of {this.state.rowData.length}\n                            <ChevronDown className=\"ml-50\" size={15} />\n                          </DropdownToggle>\n                          <DropdownMenu right>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(20)}\n                            >\n                              20\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(50)}\n                            >\n                              50\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(100)}\n                            >\n                              100\n                            </DropdownItem>\n                            <DropdownItem\n                              tag=\"div\"\n                              onClick={() => this.filterSize(134)}\n                            >\n                              134\n                            </DropdownItem>\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                      </div>\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                        <div className=\"table-input mr-1\">\n                          <Input\n                            placeholder=\"search...\"\n                            onChange={(e) =>\n                              this.updateSearchQuery(e.target.value)\n                            }\n                            value={this.state.value}\n                          />\n                        </div>\n                        <div className=\"export-btn\">\n                          <Button.Ripple\n                            color=\"primary\"\n                            onClick={() => this.gridApi.exportDataAsCsv()}\n                          >\n                            Export as CSV\n                          </Button.Ripple>\n                        </div>\n                      </div>\n                    </div>\n                    <ContextLayout.Consumer>\n                      {(context) => (\n                        <AgGridReact\n                          gridOptions={{}}\n                          rowSelection=\"multiple\"\n                          defaultColDef={defaultColDef}\n                          columnDefs={columnDefs}\n                          rowData={rowData}\n                          onGridReady={this.onGridReady}\n                          colResizeDefault={\"shift\"}\n                          animateRows={true}\n                          floatingFilter={false}\n                          pagination={true}\n                          paginationPageSize={this.state.paginationPageSize}\n                          pivotPanelShow=\"always\"\n                          enableRtl={context.state.direction === \"rtl\"}\n                        />\n                      )}\n                    </ContextLayout.Consumer>\n                  </div>\n                )}\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      )\n    );\n  }\n}\nexport default SliderList;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}