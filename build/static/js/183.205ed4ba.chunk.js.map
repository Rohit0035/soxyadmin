{"version":3,"sources":["views/apps/website/videos/VideosList.js","axiosConfig.js"],"names":["VideosList","state","rowData","sortable","editable","resizable","suppressMenu","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","video_title","video_url","size","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","currenPageSize","paginationGetCurrentPage","getPageSize","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","id","console","log","this","columnDefs","defaultColDef","sm","col-sm-6","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","paginationPageSize","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/183.205ed4ba.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  Button,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport { Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../../assets/scss/pages/users.scss\";\n\nclass VideosList extends React.Component {\n  state = {\n    rowData: [],\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      // {\n      //   headerName: \"S.no\",\n      //   valueGetter: \"node.rowIndex + 1\",\n      //   field: \"sortorder\",\n      //   width: 100,\n      //   filter: true,\n      //   checkboxSelection: true,\n      //   headerCheckboxSelectionFilteredOnly: true,\n      //   headerCheckboxSelection: true,\n      // },\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n\n      {\n        headerName: \"Video Title\",\n        field: \"video_title\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 180,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.video_title}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Video Url\",\n        field: \"video_url\",\n        //filter: true,\n        filter: \"agSetColumnFilter\",\n        width: 550,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <div className=\"\">\n                <span>{params.data.video_url}</span>\n              </div>\n            </div>\n          );\n        },\n      },\n\n      {\n        headerName: \"Actions\",\n        field: \"transactions\",\n        width: 120,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"actions cursor-pointer ml-2\">\n              {/* <Edit className=\"mr-50\" size={20} /> */}\n              <Trash2\n                size={20}\n                onClick={() => {\n                  let selectedData = this.gridApi.getSelectedRows();\n                  this.runthisfunction(params.data._id);\n                  this.gridApi.updateRowData({ remove: selectedData });\n                }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  async componentDidMount() {\n    await axiosConfig.get(\"/all_video\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n\n  async runthisfunction(id) {\n    console.log(id);\n    await axiosConfig.get(`/del_video/${id}`).then((response) => {\n      console.log(response);\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\">\n          \n        </Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Videos List\n                </h1>\n              </Col>\n              <Col>\n                <Button\n                  className=\" btn btn-danger float-right\"\n                  onClick={() => history.push(\"/app/website/videos/addVideo\")}\n                >\n                  Add New Video\n                </Button>\n              </Col>\n            </Row>\n            <CardBody>\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default VideosList;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}