{"version":3,"sources":["views/apps/order/AllOrder.js","axiosConfig.js"],"names":["AllOrder","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","seller","name","customer","firstname","lastname","className","email","mobile","product","sortorder","product_price","product_qty","size","color","cus_orderId","seller_orderId","shipping_address","payment_type","value","status","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","a","axiosConfig","get","then","response","this","sm","col-sm-6","tag","length","right","onClick","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/165.e0f84374.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Row,\n  Col,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../axiosConfig\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport {\n   Edit,\n   Trash2,\n  // Clipboard,\n  // Printer,\n  // Download,\n  ChevronDown,\n} from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../history\";\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../assets/scss/pages/users.scss\";\nclass AllOrder extends React.Component {\n  state = {\n    rowData: [],\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n\n    columnDefs: [\n      {\n        headerName: \"S.No\",\n        valueGetter: \"node.rowIndex + 1\",\n        field: \"node.rowIndex + 1\",\n        width: 150,\n        filter: true,\n        // checkboxSelection: true,\n        // headerCheckboxSelectionFilteredOnly: true,\n        // headerCheckboxSelection: true,\n      },\n      \n      { \n        headerName: \"Seller Name\",\n        field: \"seller.name\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.seller?.name}</span>\n            </div>\n          );\n        },\n      },\n      { \n        headerName: \"First Name\",\n        field: \"customer.firstname\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.customer?.firstname}</span>\n            </div>\n          );\n        },\n      },\n      { \n        headerName: \"Last Name\",\n        field: \"customer.lastname\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div>\n              <span>{params.data?.customer?.lastname}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Customer Email\",\n        field: \"customer.email\",\n        filter: true,\n        width: 220,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data?.customer?.email}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Order ID\",\n        field: \"customer.mobile\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.customer?.mobile}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Sort Order\",\n        field: \"product.sortorder\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.product?.sortorder}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Product Price\",\n        field: \"product_price\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.product_price}</span>\n            </div>\n          );\n        },\n      },\n      \n      \n      {\n        headerName: \"Product qty\",\n        field: \"product_qty\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.product_qty}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Size\",\n        field: \"size\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.size}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Color\",\n        field: \"color\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.color}</span>\n            </div>\n          );\n        },\n      },\n      \n      {\n        headerName: \"Customer OrderId\",\n        field: \"cus_orderId\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.cus_orderId}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Seller OrderId\",\n        field: \"seller_orderId\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.seller_orderId}</span>\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Shipping Address\",\n        field: \"shipping_address\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.shipping_address}</span>\n            </div>\n          );\n        },\n      },\n      \n      {\n        headerName: \"Payment Type\",\n        field: \"payment_type\",\n        filter: true,\n        width: 200,\n        cellRendererFramework: (params) => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <span>{params.data.payment_type}</span>\n            </div>\n          );\n        },\n      },\n    \n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: (params) => {\n          return params.value === \"Delivery\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Pending\" ? (\n            <div className=\"badge badge-pill badge-primary\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Cancel\" ? (\n            <div className=\"badge badge-pill badge-danger\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Complete\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      // {\n      //   headerName: \"Actions\",\n      //   field: \"sortorder\",\n      //   width: 150,\n      //   cellRendererFramework: (params) => {\n      //     return (\n      //       <div className=\"actions cursor-pointer\">\n      //         {/* <Eye\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"green\"\n      //           onClick={() =>\n      //           history.push(`/app/seller/viewSeller/${params.data._id}`)}\n      //         />\n      //         <Edit\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"blue\"\n      //           onClick={() => history.push(`/app/seller/editSeller/${params.data._id}`)}\n      //         /> */}\n      //         {/* <Trash2\n      //           className=\"mr-50\"\n      //           size=\"25px\"\n      //           color=\"Red\"\n      //           onClick={() => {\n      //             let selectedData = this.gridApi.getSelectedRows();\n      //             this.runthisfunction(params.data._id);\n      //             this.gridApi.updateRowData({ remove: selectedData });\n      //           }}\n      //         /> */}\n      //       </div>\n      //     );\n      //   },\n      // },\n\n    ],\n   };\n\n  async componentDidMount() {\n    await axiosConfig.get(\"/orderlist\").then((response) => {\n      let rowData = response.data.data;\n      this.setState({ rowData });\n    });\n  }\n\n  onGridReady = (params) => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = (val) => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = (val) => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <Row className=\"app-user-list\">\n        <Col sm=\"12\">\n         \n        </Col>\n        <Col sm=\"12\">\n          <Card>\n            <Row className=\"m-2\">\n              <Col>\n                <h1 col-sm-6 className=\"float-left\">\n                  Order List\n                </h1>\n              </Col>\n            </Row>\n            <CardBody>\n              {this.state.rowData === null ? null : (\n                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                  <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                    <div className=\"mb-1\">\n                      <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                        <DropdownToggle tag=\"div\">\n                          {this.gridApi\n                            ? this.state.currenPageSize\n                            : \"\" * this.state.getPageSize -\n                              (this.state.getPageSize - 1)}{\" \"}\n                          -{\" \"}\n                          {this.state.rowData.length -\n                            this.state.currenPageSize * this.state.getPageSize >\n                          0\n                            ? this.state.currenPageSize * this.state.getPageSize\n                            : this.state.rowData.length}{\" \"}\n                          of {this.state.rowData.length}\n                          <ChevronDown className=\"ml-50\" size={15} />\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(20)}\n                          >\n                            20\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(50)}\n                          >\n                            50\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(100)}\n                          >\n                            100\n                          </DropdownItem>\n                          <DropdownItem\n                            tag=\"div\"\n                            onClick={() => this.filterSize(134)}\n                          >\n                            134\n                          </DropdownItem>\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                    </div>\n                    <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                      <div className=\"table-input mr-1\">\n                        <Input\n                          placeholder=\"search...\"\n                          onChange={(e) =>\n                            this.updateSearchQuery(e.target.value)\n                          }\n                          value={this.state.value}\n                        />\n                      </div>\n                      <div className=\"export-btn\">\n                        <Button.Ripple\n                          color=\"primary\"\n                          onClick={() => this.gridApi.exportDataAsCsv()}\n                        >\n                          Export as CSV\n                        </Button.Ripple>\n                      </div>\n                    </div>\n                  </div>\n                  <ContextLayout.Consumer>\n                    {(context) => (\n                      <AgGridReact\n                        gridOptions={{}}\n                        rowSelection=\"multiple\"\n                        defaultColDef={defaultColDef}\n                        columnDefs={columnDefs}\n                        rowData={rowData}\n                        onGridReady={this.onGridReady}\n                        colResizeDefault={\"shift\"}\n                        animateRows={true}\n                        floatingFilter={false}\n                        pagination={true}\n                        paginationPageSize={this.state.paginationPageSize}\n                        pivotPanelShow=\"always\"\n                        enableRtl={context.state.direction === \"rtl\"}\n                      />\n                    )}\n                  </ContextLayout.Consumer>\n                </div>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default AllOrder;","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://35.154.134.118/api/admin\",\n  \n});\n\nexport default instance;\n"],"sourceRoot":""}