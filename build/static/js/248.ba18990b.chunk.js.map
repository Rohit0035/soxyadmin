{"version":3,"sources":["views/apps/walletPage/withdrawalRequest.js"],"names":["withdrawalRequest","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","cellRendererFramework","params","className","src","data","image","alt","height","value","status","size","color","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","JSON","stringify","this","Fragment","breadCrumbTitle","breadCrumbActive","tag","length","right","onClick","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/248.ba18990b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Button,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from \"reactstrap\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { ContextLayout } from \"../../../utility/context/Layout\";\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\nimport axios from \"axios\";\n\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\n\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\n\nclass withdrawalRequest extends React.Component {\n  state = {\n    rowData: null,\n    paginationPageSize: 20,\n    currenPageSize: \"\",\n    getPageSize: \"\",\n    defaultColDef: {\n      sortable: true,\n      editable: true,\n      resizable: true,\n      suppressMenu: true,\n    },\n    columnDefs: [\n      {\n        headerName: \"UserName\",\n        field: \"firstname\",\n        width: 175,\n        filter: true,\n        checkboxSelection: true,\n        headerCheckboxSelectionFilteredOnly: true,\n        headerCheckboxSelection: true,\n      },\n      {\n        headerName: \"UserId\",\n        field: \"UserId\",\n        filter: \"agNumberColumnFilter\",\n        width: 140,\n      },\n      //   {\n      //     headerName: \"Email\",\n      //     field: \"email\",\n      //     filter: true,\n      //     width: 250,\n      //     pinned: window.innerWidth > 992 ? \"left\" : false,\n      //   },\n      {\n        headerName: \"Date\",\n        field: \"Date\",\n        filter: true,\n        width: 250,\n      },\n      {\n        headerName: \"Email\",\n        field: \"Email\",\n        filter: true,\n        width: 150,\n      },\n      {\n        headerName: \"Phone Number\",\n        field: \"Number\",\n        filter: true,\n        width: 150,\n      },\n      {\n        headerName: \"HashTag\",\n        field: \"HashTag\",\n        filter: true,\n        width: 125,\n      },\n      {\n        headerName: \"Payment Method\",\n        field: \"Payment Method\",\n        filter: \"agNumberColumnFilter\",\n        width: 140,\n      },\n      {\n        headerName: \"Image \",\n        field: \"image\",\n        filter: true,\n        width: 120,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"d-flex align-items-center cursor-pointer\">\n              <img\n                className=\"rounded-circle\"\n                src={params.data.image}\n                alt=\"user\"\n                height=\"45\"\n                width=\"90\"\n              />\n            </div>\n          );\n        },\n      },\n      {\n        headerName: \"Status\",\n        field: \"status\",\n        filter: true,\n        width: 150,\n        cellRendererFramework: params => {\n          return params.value === \"Active\" ? (\n            <div className=\"badge badge-pill badge-success\">\n              {params.data.status}\n            </div>\n          ) : params.value === \"Inactive\" ? (\n            <div className=\"badge badge-pill badge-warning\">\n              {params.data.status}\n            </div>\n          ) : null;\n        },\n      },\n      {\n        headerName: \"Actions\",\n        field: \"transactions\",\n        width: 150,\n        cellRendererFramework: params => {\n          return (\n            <div className=\"actions cursor-pointer\">\n              <Eye\n                className=\"mr-50\"\n                size={20}\n                // onClick={() =>\n                //   history.push(`/app/store/stores/viewStore/${params.data._id}`)\n                // }\n              />\n              <Edit\n                className=\"mr-50\"\n                size=\"25px\"\n                color=\"blue\"\n                // onClick={() =>\n                //   history.push(`/app/seller/editSeller/${params.data._id}`)\n                // }\n              />\n              <Trash2\n                size={20}\n                // onClick={() => {\n                //   let selectedData = this.gridApi.getSelectedRows();\n                //   this.runthisfunction(params.data._id);\n                //   this.gridApi.updateRowData({ remove: selectedData });\n                // }}\n              />\n            </div>\n          );\n        },\n      },\n    ],\n  };\n\n  componentDidMount() {\n    axios.get(\"/api/aggrid/data\").then(response => {\n      let rowData = response.data.data;\n      JSON.stringify(rowData);\n      this.setState({ rowData });\n    });\n  }\n\n  onGridReady = params => {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.setState({\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n      getPageSize: this.gridApi.paginationGetPageSize(),\n      totalPages: this.gridApi.paginationGetTotalPages(),\n    });\n  };\n\n  updateSearchQuery = val => {\n    this.gridApi.setQuickFilter(val);\n  };\n\n  filterSize = val => {\n    if (this.gridApi) {\n      this.gridApi.paginationSetPageSize(Number(val));\n      this.setState({\n        currenPageSize: val,\n        getPageSize: val,\n      });\n    }\n  };\n\n  render() {\n    const { rowData, columnDefs, defaultColDef } = this.state;\n    return (\n      <React.Fragment>\n        <Breadcrumbs\n          breadCrumbTitle=\"Wallet Table\"\n          //   breadCrumbParent=\"Forms & Tables\"\n          breadCrumbActive=\"Wallet Table\"\n        />\n        <Card className=\"overflow-hidden agGrid-card\">\n          <CardBody className=\"py-0\">\n            {this.state.rowData === null ? null : (\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                  <div className=\"mb-1\">\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                      <DropdownToggle tag=\"div\">\n                        {this.gridApi\n                          ? this.state.currenPageSize\n                          : \"\" * this.state.getPageSize -\n                            (this.state.getPageSize - 1)}{\" \"}\n                        -{\" \"}\n                        {this.state.rowData.length -\n                          this.state.currenPageSize * this.state.getPageSize >\n                        0\n                          ? this.state.currenPageSize * this.state.getPageSize\n                          : this.state.rowData.length}{\" \"}\n                        of {this.state.rowData.length}\n                        <ChevronDown className=\"ml-50\" size={15} />\n                      </DropdownToggle>\n                      <DropdownMenu right>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(20)}\n                        >\n                          20\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(50)}\n                        >\n                          50\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(100)}\n                        >\n                          100\n                        </DropdownItem>\n                        <DropdownItem\n                          tag=\"div\"\n                          onClick={() => this.filterSize(134)}\n                        >\n                          134\n                        </DropdownItem>\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div>\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                    <div className=\"table-input mr-1\">\n                      <Input\n                        placeholder=\"search...\"\n                        onChange={e => this.updateSearchQuery(e.target.value)}\n                        value={this.state.value}\n                      />\n                    </div>\n                    <div className=\"export-btn\">\n                      <Button.Ripple\n                        color=\"primary\"\n                        onClick={() => this.gridApi.exportDataAsCsv()}\n                      >\n                        Export as CSV\n                      </Button.Ripple>\n                    </div>\n                  </div>\n                </div>\n                <ContextLayout.Consumer>\n                  {context => (\n                    <AgGridReact\n                      gridOptions={{}}\n                      rowSelection=\"multiple\"\n                      defaultColDef={defaultColDef}\n                      columnDefs={columnDefs}\n                      rowData={rowData}\n                      onGridReady={this.onGridReady}\n                      colResizeDefault={\"shift\"}\n                      animateRows={true}\n                      floatingFilter={true}\n                      pagination={true}\n                      paginationPageSize={this.state.paginationPageSize}\n                      pivotPanelShow=\"always\"\n                      enableRtl={context.state.direction === \"rtl\"}\n                    />\n                  )}\n                </ContextLayout.Consumer>\n              </div>\n            )}\n          </CardBody>\n        </Card>\n      </React.Fragment>\n    );\n  }\n}\nexport default withdrawalRequest;\n"],"sourceRoot":""}